<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

	<global-method-security pre-post-annotations="enabled" />
	
	<http use-expressions="true">
		<intercept-url pattern="/users/*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/users*" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/account" access="hasRole('ROLE_USER')" />
		<form-login login-page="/login" />
		<logout logout-url="/logout" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<password-encoder hash="bcrypt" />
			<jdbc-user-service data-source-ref="dataSource" 
				authorities-by-username-query="select App_User.name, Role.name from App_User 
												join App_User_Role on App_User.id = App_User_Role.users_id 
												join Role on App_User_Role.roles_id = Role.id 
												where App_User.name = ?"
				users-by-username-query="select name, password, enabled from App_User where name = ?"/>
			
		</authentication-provider>
	</authentication-manager>

</beans:beans>